// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Only_Bikes.Models;

#nullable disable

namespace Only_Bikes.Migrations
{
    [DbContext(typeof(OnlyBicycleDbContext))]
    [Migration("20240617182124_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Only_bicycles.Models.Bicycle", b =>
                {
                    b.Property<int>("BicycleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BicycleId"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FrameSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RentCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isAvailableNow")
                        .HasColumnType("bit");

                    b.HasKey("BicycleId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenderCategoryID");

                    b.ToTable("Bicycles");
                });

            modelBuilder.Entity("Only_bicycles.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Only_bicycles.Models.GenderCategory", b =>
                {
                    b.Property<int>("GenderCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderCategoryID"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderCategoryID");

                    b.ToTable("GenderCategories");
                });

            modelBuilder.Entity("Only_bicycles.Models.Bicycle", b =>
                {
                    b.HasOne("Only_bicycles.Models.Category", "Category")
                        .WithMany("Bicycles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Only_bicycles.Models.GenderCategory", "GenderCategory")
                        .WithMany("Bicycles")
                        .HasForeignKey("GenderCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("GenderCategory");
                });

            modelBuilder.Entity("Only_bicycles.Models.Category", b =>
                {
                    b.Navigation("Bicycles");
                });

            modelBuilder.Entity("Only_bicycles.Models.GenderCategory", b =>
                {
                    b.Navigation("Bicycles");
                });
#pragma warning restore 612, 618
        }
    }
}
